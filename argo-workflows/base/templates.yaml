---
apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: container-image
spec:
  serviceAccountName: workflow
  templates:
  - name: build-kaniko-git
    inputs:
      parameters:
      - name: repo_url
      - name: repo_ref
        value: refs/heads/master
      - name: repo_commit_id
        value: HEAD
      - name: container_image
      - name: container_tag
    container:
      image: gcr.io/kaniko-project/executor:debug
      args:
      #- --context={{inputs.parameters.repo_url}}#{{inputs.parameters.repo_ref}}#{{inputs.parameters.repo_commit_id}}
      - --context={{inputs.parameters.repo_url}}
      - --destination={{inputs.parameters.container_image}}:{{inputs.parameters.container_tag}}
      - --verbosity=trace
      volumeMounts:
        - name: regcred
          mountPath: /kaniko/.docker/
---
apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: promote
spec:
  serviceAccountName: workflow
  templates:
  - name: promote
    inputs:
      parameters:
      - name: environment
      - name: repo_owner
      - name: repo_name
      - name: image_owner
      - name: image_name
      - name: tag
    script:
      image: slavicviking/docker-kustomize:4.3.0
      command: [sh]
      source: |
        set -e
        git clone https://$(cat /.github/token)@github.com/{{inputs.parameters.repo_owner}}/{{inputs.parameters.repo_name}}
        cd {{inputs.parameters.repo_name}}
        sleep 2
        echo BEFORE:
        cat {{inputs.parameters.environment}}/{{inputs.parameters.image_name}}.yaml
        echo AFTER:
        cat {{inputs.parameters.environment}}/{{inputs.parameters.image_name}}.yaml | sed -e "s@- {{inputs.parameters.image_owner}}/{{inputs.parameters.image_name}}:.*@- {{inputs.parameters.image_owner}}/{{inputs.parameters.image_name}}:{{inputs.parameters.tag}}@g" | tee {{inputs.parameters.environment}}/{{inputs.parameters.image_name}}.yaml
        git config user.name "$(cat /.github/user)"
        git config user.email "$(cat /.github/email)"
        git add {{inputs.parameters.environment}}/{{inputs.parameters.image_name}}.yaml
        git commit -m "Upgraded {{inputs.parameters.environment}}/{{inputs.parameters.image_name}}.yaml with the tag {{inputs.parameters.tag}}"
        git push
      volumeMounts:
      - name: github-access
        mountPath: /.github/
---
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: buildkit
spec:
  arguments:
    parameters:
      - name: repo
        value: https://github.com/slavic-viking/k8s-demo-app
      - name: branch
        value: master
      - name: path
        value: .
      - name: image
        value: slavicviking/argosay:v2
  entrypoint: main
  volumeClaimTemplates:
    - metadata:
        name: work
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 64Mi
  templates:
    - name: main
      dag:
        tasks:
          - name: clone
            template: clone
            arguments:
              parameters:
                - name: repo
                  value: "{{workflow.parameters.repo}}"
                - name: branch
                  value: "{{workflow.parameters.branch}}"
          - name: build
            template: build
            arguments:
              parameters:
                - name: path
                  value: "{{workflow.parameters.path}}"
            depends: "clone"
          - name: image
            template: image
            arguments:
              parameters:
                - name: path
                  value: "{{workflow.parameters.path}}"
                - name: image
                  value: "{{workflow.parameters.image}}"
            depends: "build"
    - name: clone
      inputs:
        parameters:
          - name: repo
          - name: branch
      container:
        volumeMounts:
          - mountPath: /work
            name: work
        image: alpine/git:v2.26.2
        workingDir: /work
        # Do a shallow clone, which is the fastest way to clone, by using the
        # --depth, --branch, and --single-branch options
        args:
          - clone
          - --depth
          - "1"
          - --branch
          - "{{inputs.parameters.branch}}"
          - --single-branch
          - "{{inputs.parameters.repo}}"
          - .
    - name: build
      inputs:
        parameters:
          - name: path
      container:
        image: golang:1.13
        volumeMounts:
          - mountPath: /work
            name: work
        workingDir: /work/{{inputs.parameters.path}}
        env:
          # Because this is not a Gomodule, we must turn modules off.
          - name: GO111MODULE
            value: "off"
        command:
          - go
        args:
          - build
          - -v
          - -o
          - argosay
          - ./...
    - name: image
      inputs:
        parameters:
          - name: path
          - name: image
      # Mount the configuration so we can push the image.
      # This should create the /.docker/config.json file.
      volumes:
        - name: docker-config
          secret:
            secretName: docker-config
      container:
        image: moby/buildkit:v0.7.2-rootless
        volumeMounts:
          - name: work
            mountPath: /work
          - name: docker-config
            mountPath: /.docker
        workingDir: /work/{{inputs.parameters.path}}
        env:
          - name: BUILDKITD_FLAGS
            value: --oci-worker-no-process-sandbox
          - name: DOCKER_CONFIG
            value: /.docker
        command:
          - buildctl-daemonless.sh
        args:
          - build
          - --frontend
          - dockerfile.v0
          - --local
          - context=.
          - --local
          - dockerfile=.
          - --output
          - type=image,name=docker.io/{{inputs.parameters.image}},push=true